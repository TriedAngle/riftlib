import std/[httpclient, json, strformat, times]
var client = newHttpClient()

let data = client.getContent("https://ddragon.leagueoflegends.com/cdn/12.6.1/data/en_US/champion.json").parseJson
let version = data["version"]
let champions = data["data"]

var buffer: string
buffer.add(fmt"""
# AUTOGENERATED BY /scripts/champions.nim
# VERSION: {version}
# ON: {now()}

""")

buffer.add("""
type 
  ChampionStats* = object
    hp*: float32
    hpPerLevel*: float32
    mp*: float32
    mpPerLevel*: float32
    moveSpeed*: float32
    armor*: float32
    armorPerLevel*: float32
    spellBlock*: float32
    spellBlockPerLevel*: float32
    attackRange*: float32
    hpRegen*: float32
    hpRegenPerLevel*: float32
    mpRegen*: float32
    mpRegenPerLevel*: float32
    crit*: float32
    critPerLevel*: float32
    attackDamage*: float32
    attackDamagePerLevel*: float32
    attackSpeed*: float32
    attackSpeedPerLevel*: float32


  Champion* {.pure.} = enum
    Invalid
    None
""")

var bufferArr = """

const ChampionIds* = [
  Invalid: -1,
  None: 0,
"""

for champion in champions.keys():
  let id = champions[champion]["id"].getStr
  let key = champions[champion]["key"].getStr

  bufferArr.add(fmt("  {id}: {key},\n"))
  buffer.add(fmt("    {id}\n"))

bufferArr.add("]\n\n")
buffer.add(bufferArr)
buffer.add("""
const championNames* = [
  Champion.Invalid: "Invalid",
  Champion.None: "None",
""")

for champion in champions.keys():
  let id = champions[champion]["id"].getStr
  let name = champions[champion]["name"].getStr
  buffer.add(fmt("  Champion.{id}: \"{name}\",\n"))

buffer.add("]\n\n")

buffer.add("""
const championStats* = [
  Champion.Invalid: ChampionStats(),
  Champion.None: ChampionStats(),
""")

for champion in champions.keys():
  let id = champions[champion]["id"].getStr
  let info = champions[champion]["stats"]
  let hp = info["hp"].getFloat
  let hpPerLevel = info["hpperlevel"].getFloat
  let mp = info["mp"].getFloat
  let mpPerLevel = info["mpperlevel"].getFloat
  let moveSpeed = info["movespeed"].getFloat
  let armor = info["armor"].getFloat
  let armorPerLevel = info["armorperlevel"].getFloat
  let spellBlock = info["spellblock"].getFloat
  let spellBlockPerLevel = info["spellblockperlevel"].getFloat
  let attackRange = info["attackrange"].getFloat
  let hpRegen = info["hpregen"].getFloat
  let hpRegenPerLevel = info["hpregenperlevel"].getFloat
  let mpRegen = info["mpregen"].getFloat
  let mpRegenPerLevel = info["mpregenperlevel"].getFloat
  let crit = info["crit"].getFloat
  let critPerLevel = info["critperlevel"].getFloat
  let attackDamage = info["attackdamage"].getFloat
  let attackDamagePerLevel = info["attackdamageperlevel"].getFloat
  let attackSpeed = info["attackspeed"].getFloat
  let attackSpeedPerLevel = info["attackspeedperlevel"].getFloat

  buffer.add(fmt"""
  Champion.{id}: ChampionStats(
      hp: {hp},
      hpPerLevel: {hpPerLevel},
      mp: {mp},
      mpPerLevel: {mpPerLevel},
      moveSpeed: {moveSpeed},
      armor: {armor},
      armorPerLevel: {armorPerLevel},
      spellBlock: {spellBlock},
      spellBlockPerLevel: {spellBlockPerLevel},
      attackRange: {attackRange},
      hpRegen: {hpRegen},
      hpRegenPerLevel: {hpRegenPerLevel},
      mpRegen: {mpRegen},
      mpRegenPerLevel: {mpRegenPerLevel},
      crit: {crit},
      critPerLevel: {critPerLevel},
      attackDamage: {attackDamage},
      attackDamagePerLevel: {attackDamagePerLevel},
      attackSpeed: {attackSpeed},
      attackSpeedPerLevel: {attackSpeedPerLevel}
    ),
  """)

buffer.add("]\n\n")

writeFile("../src/riftlib/types/champions.nim", buffer)